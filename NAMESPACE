# Generated by roxygen2: do not edit by hand

S3method(class_probabilities,mcmc_fit)
S3method(class_probabilities,optim_fit)
S3method(loo,rater_fit)
S3method(plot,rater_fit)
S3method(posterior_interval,mcmc_fit)
S3method(posterior_interval,optim_fit)
S3method(posterior_predict,rater_fit)
S3method(print,mcmc_fit)
S3method(print,optim_fit)
S3method(print,rater_model)
S3method(prior_summary,rater_fit)
S3method(summary,mcmc_fit)
S3method(summary,optim_fit)
S3method(summary,rater_model)
S3method(waic,rater_fit)
export(as_mcmc.list)
export(class_conditional_dawid_skene)
export(class_probabilities)
export(dawid_skene)
export(dawid_skene_unsure)
export(get_stanfit)
export(hier_dawid_skene)
export(loo)
export(loo_compare)
export(make_complete_rating_design_sim_data)
export(make_theta)
export(mcmc_diagnostics)
export(point_estimate)
export(posterior_interval)
export(posterior_predict)
export(posterior_samples)
export(prior_summary)
export(rater)
export(simulate_dawid_skene_model)
export(simulate_hier_dawid_skene_model)
export(waic)
export(wide_to_long)
import(Rcpp)
import(methods)
importFrom(RcppParallel,CxxFlags)
importFrom(RcppParallel,RcppParallelLibs)
importFrom(ggplot2,aes)
importFrom(ggplot2,coord_cartesian)
importFrom(ggplot2,element_blank)
importFrom(ggplot2,element_rect)
importFrom(ggplot2,facet_wrap)
importFrom(ggplot2,geom_bar)
importFrom(ggplot2,geom_text)
importFrom(ggplot2,geom_tile)
importFrom(ggplot2,ggplot)
importFrom(ggplot2,guides)
importFrom(ggplot2,labs)
importFrom(ggplot2,scale_fill_gradient)
importFrom(ggplot2,theme)
importFrom(ggplot2,theme_bw)
importFrom(loo,extract_log_lik)
importFrom(loo,loo)
importFrom(loo,loo_compare)
importFrom(loo,relative_eff)
importFrom(loo,waic)
importFrom(rlang,.data)
importFrom(rstan,As.mcmc.list)
importFrom(rstan,Rhat)
importFrom(rstan,ess_bulk)
importFrom(rstan,extract)
importFrom(rstan,optimizing)
importFrom(rstan,sampling)
importFrom(rstantools,posterior_interval)
importFrom(rstantools,posterior_predict)
importFrom(rstantools,prior_summary)
importFrom(stats,rnorm)
importFrom(utils,capture.output)
importFrom(utils,head)
useDynLib(rater, .registration = TRUE)
